import{hp as O,h7 as k,hq as E,hr as R,hs as F}from"./entry.HuYbGiLS.js";import{a as w,s as T,t as j,g as B,al as M,W as P,b as U,u as $,k as q,aP as y,r as z}from"./swiper-vue.4ZhlhtKr.js";const A=n=>n==="defer"||n===!1;function H(...n){var D;const u=typeof n[n.length-1]=="string"?n.pop():void 0;typeof n[0]!="string"&&n.unshift(u);let[a,o,e={}]=n;if(typeof a!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof o!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const t=k(),f=()=>null,p=()=>t.isHydrating?t.payload.data[a]:t.static.data[a];e.server=e.server??!0,e.default=e.default??f,e.getCachedData=e.getCachedData??p,e.lazy=e.lazy??!1,e.immediate=e.immediate??!0,e.deep=e.deep??O.deep,e.dedupe=e.dedupe??"cancel";const m=()=>![null,void 0].includes(e.getCachedData(a));if(!t._asyncData[a]||!e.immediate){(D=t.payload._errors)[a]??(D[a]=null);const i=e.deep?w:T;t._asyncData[a]={data:i(e.getCachedData(a)??e.default()),pending:w(!m()),error:j(t.payload._errors,a),status:w("idle")}}const s={...t._asyncData[a]};s.refresh=s.execute=(i={})=>{if(t._asyncDataPromises[a]){if(A(i.dedupe??e.dedupe))return t._asyncDataPromises[a];t._asyncDataPromises[a].cancelled=!0}if((i._initial||t.isHydrating&&i._initial!==!1)&&m())return Promise.resolve(e.getCachedData(a));s.pending.value=!0,s.status.value="pending";const l=new Promise((r,c)=>{try{r(o(t))}catch(_){c(_)}}).then(r=>{if(l.cancelled)return t._asyncDataPromises[a];let c=r;e.transform&&(c=e.transform(r)),e.pick&&(c=L(c,e.pick)),t.payload.data[a]=c,s.data.value=c,s.error.value=null,s.status.value="success"}).catch(r=>{if(l.cancelled)return t._asyncDataPromises[a];s.error.value=E(r),s.data.value=$(e.default()),s.status.value="error"}).finally(()=>{l.cancelled||(s.pending.value=!1,delete t._asyncDataPromises[a])});return t._asyncDataPromises[a]=l,t._asyncDataPromises[a]};const g=()=>s.refresh({_initial:!0}),b=e.server!==!1&&t.payload.serverRendered;{const i=B();if(i&&!i._nuxtOnBeforeMountCbs){i._nuxtOnBeforeMountCbs=[];const r=i._nuxtOnBeforeMountCbs;i&&(M(()=>{r.forEach(c=>{c()}),r.splice(0,r.length)}),P(()=>r.splice(0,r.length)))}b&&t.isHydrating&&(s.error.value||m())?(s.pending.value=!1,s.status.value=s.error.value?"error":"success"):i&&(t.payload.serverRendered&&t.isHydrating||e.lazy)&&e.immediate?i._nuxtOnBeforeMountCbs.push(g):e.immediate&&g(),e.watch&&U(e.watch,()=>s.refresh());const l=t.hook("app:data:refresh",async r=>{(!r||r.includes(a))&&await s.refresh()});i&&P(l)}const v=Promise.resolve(t._asyncDataPromises[a]).then(()=>s);return Object.assign(v,s),v}function L(n,u){const a={};for(const o of u)a[o]=n[o];return a}function V(n,u,a){const[o={},e]=typeof u=="string"?[{},u]:[u,a],t=q(()=>{let h=n;return typeof h=="function"&&(h=h()),y(h)}),f=o.key||R([e,typeof t.value=="string"?t.value:"",...K(o)]);if(!f||typeof f!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+f);if(!n)throw new Error("[nuxt] [useFetch] request is missing.");const p=f===e?"$f"+f:f;if(!o.baseURL&&typeof t.value=="string"&&t.value[0]==="/"&&t.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:m,lazy:s,default:g,transform:b,pick:v,watch:D,immediate:i,getCachedData:l,deep:r,...c}=o,_=z({...F,...c,cache:typeof o.cache=="boolean"?void 0:o.cache}),x={server:m,lazy:s,default:g,transform:b,pick:v,immediate:i,getCachedData:l,deep:r,watch:D===!1?[]:[_,t,...D||[]]};let d;return H(p,()=>{var C;(C=d==null?void 0:d.abort)==null||C.call(d),d=typeof AbortController<"u"?new AbortController:{};const h=y(o.timeout);return h&&setTimeout(()=>d.abort(),h),(o.$fetch||globalThis.$fetch)(t.value,{signal:d.signal,..._})},x)}function K(n){var a;const u=[((a=y(n.method))==null?void 0:a.toUpperCase())||"GET",y(n.baseURL)];for(const o of[n.params||n.query]){const e=y(o);if(!e)continue;const t={};for(const[f,p]of Object.entries(e))t[y(f)]=y(p);u.push(t)}return u}export{H as a,V as u};
